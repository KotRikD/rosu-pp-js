name: CI

on:
  push:
    branches:
      - main
      - next
    tags:
      - '**'
  pull_request:
  workflow_dispatch:

jobs:
  types:
    name: Check .d.ts file
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build
        run: wasm-pack build --target nodejs --out-dir pkg

      - name: Compare .d.ts files
        run: |
          if ! cmp --silent pkg/rosu_pp_js.d.ts rosu_pp_js.d.ts; then
            echo ".d.ts file is not up to date"
            cmp --print-bytes pkg/rosu_pp_js.d.ts rosu_pp_js.d.ts
            exit 1
          fi

  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        target: [bundler, nodejs, web]

    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - if: ${{ matrix.target != 'nodejs' }}
        name: Optimize for size
        run: |
          echo "opt-level = \"z\"" >> Cargo.toml
          echo "" >> Cargo.toml
          echo "[features]" >> Cargo.toml
          echo "default = [\"wee_alloc\"]" >> Cargo.toml

      - name: Build & zip
        run: |
          wasm-pack build --release --target ${{ matrix.target }} --out-dir pkg
          ls -ghG pkg
          tar -czvf rosu_pp_js_${{ matrix.target }}.tar.gz -C pkg .

      - name: Upload tarballs
        uses: actions/upload-artifact@v4
        with:
          name: rosu_pp_js_${{ matrix.target }}
          path: rosu_pp_js_${{ matrix.target }}.tar.gz

  release:
    name: Release
    needs: [types, build]
    if: success() && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Get artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: tars

      - name: Upload to github release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            tars/*.tar.gz

      # - name: Set up Node
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: 20

      # - name: Install rosu_pp_js_nodejs
      #   run: npm install tars/rosu_pp_js_nodejs.tar.gz

      # - name: Publish
      #   uses: JS-DevTools/npm-publish@v3
      #   with:
      #     token: ${{ secrets.NPM_TOKEN }}
